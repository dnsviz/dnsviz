# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master", "ci" ]
  pull_request:
    branches: [ "master", "ci" ]

jobs:
  Test-on-Ubuntu-native:
  
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Install DNSViz and dependencies
      run: |
        sudo apt install python3-dnspython python3-pygraphviz python3-m2crypto
        sudo apt install bind9
        sudo pip3 install .
    - name: Disable AppArmor
      run: |
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.named
    - name: Test - errors.py
      run: |
        python3 -m doctest -o ELLIPSIS dnsviz/analysis/errors.py
    - name: Test runtime
      run: |
        cd tests && \
        ./scripts/populate_zones.sh && \
        ./scripts/test_dnsviz.sh

  Test-on-Ubuntu-custom:
  
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install DNSViz and dependencies
      run: |
        sudo apt install libssl-dev libgraphviz-dev
        sudo apt install bind9
        pip3 install dnspython pygraphviz m2crypto
        sudo pip3 install .
    - name: Disable AppArmor
      run: |
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.named
    - name: Test - errors.py
      run: |
        python3 -m doctest -o ELLIPSIS dnsviz/analysis/errors.py
    - name: Test - run tests
      run: |
        cd tests && \
        ./scripts/populate_zones.sh && \
        ./scripts/test_dnsviz.sh
